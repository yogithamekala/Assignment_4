Team roles and Responsibilities: 
John Mahith: Backend Developer / Data Scientist
- John was responsible for the core backend functionalities and ensuring the app was stable and efficient. Key contributions included:
- Developed the Flask app and connected it to MongoDB: John designed and built the backend framework using Flask, a lightweight Python web framework. He also established a connection to MongoDB, a NoSQL database, to store and retrieve data effectively, allowing for a smooth interaction between the app's front end and the underlying data.
- Implemented the KMeans clustering model for skill prediction: He applied KMeans clustering, a popular machine learning technique, to group and predict user skills based on input data. This model helped classify users into specific skill sets by analyzing their responses and clustering similar skills together.
- Integrated APIs and ensured backend functionality: John implemented various APIs that enabled communication between the front end and back end. He ensured that data could be passed seamlessly and accurately, maintaining backend stability and functionality.
- Optimize the KMeans clustering model for accurate, stable skill predictions.
- Ensure seamless API integration with MongoDB, supporting efficient data flow and model updates.
- Collected the information for the poster

Maheshwar Rao Bandi: LLM Specialist / LLM Model Developer
- Maheshwar focused on the integration of large language models (LLMs) into the project, particularly for enhancing skill prediction accuracy.
- Integrated the transformers-based LLM for skill prediction: Maheshwar worked with transformers, a model architecture widely used for NLP (Natural Language Processing) tasks, to provide skill predictions. By integrating a pretrained LLM, he enhanced the model's ability to interpret nuanced language in user inputs, offering more precise skill predictions.
- Tokenized and processed user inputs to work with ML models: Maheshwar handled the pre-processing of text inputs, converting user inputs into tokenized formats that were compatible with both the LLM and KMeans models. This preprocessing step ensured the data was optimally prepared for analysis, which improved the accuracy and efficiency of predictions.
- Managed LLM outputs and ensured predictions align with the KMeans model: He ensured that the LLM's predictions complemented the KMeans model, managing outputs to avoid conflicts between models and refining predictions to increase consistency in skill classification.
- Fine-tune the transformers-based LLM for improved response quality and accurate skill predictions.
- Enhance LLM’s text interactions to better process user inputs.

Yogitha Mekala: Project Manager / Front-End Developer
- Yogitha was instrumental in both managing the project and creating an intuitive front-end interface that connected with backend processes.
- Collected and cleaned tweets using Tweepy API for real-time insights: Utilizing the Tweepy API, Yogitha gathered relevant tweets that contained insights into employee trends and sentiments. She then cleaned and processed this data, ensuring it was in a usable format for further analysis.
- Conducted analysis on employee-related tweets to extract attrition trends: By analyzing the collected tweet data, Yogitha identified patterns and trends related to employee attrition, providing useful insights for the project. This analysis was valuable for informing the skill predictions and aligning the tool’s outputs with real-world employment trends.
- Designed and connected the web interface to display skill predictions: Yogitha created a user-friendly interface that displayed the results from both the LLM and KMeans models. The interface enabled users to view skill predictions interactively and provided seamless access to the insights generated by the backend.
- Manage project timelines, documentation, and session goals tracking.
- Integrate ML and LLM outputs with the front-end UI for real-time user experience.
- Collect and analyze Twitter data for HR trend insights, improving model contextuality.
- Created a Poster, Collected the visualizations for the poster. 

In summary, each team member played a critical role in building a sophisticated app that combined backend stability, advanced NLP modeling, and an accessible user interface, resulting in an integrated tool for skill prediction and trend analysis.
